/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define HYPER LC(LS(LG(LALT)))

// layers

#define DEFAULT 0
#define LOWER 1
#define MAGIC 2
#define FACTORY_TEST 3

/ {
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to

        layer_td: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 1>, <&to 1>;
        };

        magic: magic_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MAGIC_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&rgb_ug_status_macro>;
        };

        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <55 56 57 72 73 74 75 76 77 78 79 63 32 44 62 32 33 40 41 42 43 44 45 60 5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 58 59 60 61 62 63 69 70 71 52 53 54>;
            flavor = "balanced";
            hold-trigger-on-release;
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 52 53 54 64 65 66 67 68 69 70 71 55 56 57 72 73 74>;
            flavor = "balanced";
            hold-trigger-on-release;
        };
    };

    macros {
        rgb_ug_status_macro: rgb_ug_status_macro_0 {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_STATUS>;
        };

        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 3>;
        };

        tmux_go_to_1: tmux_go_to_1 {
            label = "&TMUX_GO_TO_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp N1>;
        };

        tmux_go_to_2: tmux_go_to_2 {
            label = "&TMUX_GO_TO_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp N2>;
        };

        vim_save: vim_save {
            label = "&VIM_SAVE";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(SEMICOLON) &kp W &kp RET>;
        };

        vim_quit: vim_quit {
            label = "&VIM_QUIT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(SEMICOLON) &kp Q &kp RET>;
        };

        tmux_quit: tmux_quit {
            label = "&TMUX_QUIT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp D>;
        };

        tmux_switch: tmux_switch {
            label = "&TMUX_SWITCH";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp S>;
        };

        alt_shift: alt_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LEFT_SHIFT)>;
            label = "ALT_SHIFT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  F1   |  F2 |  F3 |  F4  |  F5  |                                                               |  F6   |  F7   |  F8  |   F9  |  F10 |
            // |  =    |  1  |  2  |  3   |  4   |  5   |                                                 |  6   |   7   |   8   |  9   |   0   |   -  |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                                                 |  Y   |   U   |   I   |  O   |   P   |   \  |
            // |  ESC  |  A  |  S  |  D   |  F   |  G   |                                                 |  H   |   J   |   K   |  L   |   ;   |   '  |
            // |   `   |  Z  |  X  |  C   |  V   |  B   | LSHFT | LCTRL | LOWER | | LGUI  | RCTRL | RSHFT |  N   |   M   |   ,   |  .   |   /   | PGUP |
            // | MAGIC | HOME| END | LEFT | RIGHT|      | BSPC  | DEL   | LALT  | | RALT  | RET   | SPACE |      |  UP   | DOWN  |  [   |   ]   | PGDN |

            bindings = <
&alt_shift  &kp F2           &kp F3           &kp F4             &kp F5                                                                                                       &kp F6        &kp F7              &kp F8            &kp F9                    &kp F10
&kp GRAVE   &kp N1           &kp N2           &kp N3             &kp N4        &kp N5                                                                                 &kp N6  &kp N7        &kp N8              &kp N9            &kp N0                    &kp BACKSLASH
&kp TAB     &kp Q            &kp W            &kp E              &kp R         &kp T                                                                                  &kp Y   &kp U         &kp I               &kp O             &kp P                     &kp MINUS
&kp ESC     &hml LEFT_GUI A  &hml LEFT_ALT S  &hml LEFT_SHIFT D  &hml LCTRL F  &kp G                                                                                  &kp H   &hmr RCTRL J  &hmr RIGHT_SHIFT K  &hmr RIGHT_ALT L  &hmr RIGHT_GUI SEMICOLON  &kp SQT
&kp EQUAL   &kp Z            &kp X            &kp C              &kp V         &kp B   &kp LCTRL  &kp LEFT_ALT    &kp DELETE  &kp INSERT    &kp RIGHT_ALT  &kp RCTRL  &kp N   &kp M         &kp COMMA           &kp DOT           &kp FSLH                  &kp PG_UP
&magic 2 0  &kp HOME         &kp END          &kp LEFT           &kp RIGHT             &kp BSPC   &kp LEFT_SHIFT  &layer_td   &kp LEFT_GUI  &kp SPACE      &kp ENTER          &kp UP        &kp DOWN            &kp LBKT          &kp RBKT                  &kp PG_DN
            >;
        };

        lower_layer {
            bindings = <
&kp C_BRI_DN  &kp C_BRI_UP  &kp C_PREV  &kp C_NEXT  &kp C_PP                                                                                 &kp C_MUTE     &kp C_VOL_DN  &kp C_VOL_UP  &none         &kp PAUSE_BREAK
&trans        &trans        &trans      &trans      &trans        &trans                                                      &trans         &trans         &trans        &trans        &trans        &kp PSCRN
&trans        &vim_quit     &vim_save   &kp UP      &tmux_switch  &tmux_quit                                                  &tmux_go_to_1  &tmux_go_to_2  &kp KP_N8     &kp KP_N9     &kp KP_MINUS  &kp SLCK
&trans        &none         &kp LEFT    &kp DOWN    &kp RIGHT     &kp PG_UP                                                   &kp PRCNT      &kp KP_N4      &kp KP_N5     &kp KP_N6     &trans        &none
&trans        &kp K_CMENU   &none       &kp F11     &kp F12       &kp PG_DN   &trans  &trans  &trans  &trans  &trans  &trans  &kp COMMA      &kp KP_N1      &kp KP_N2     &kp KP_N3     &kp KP_ENTER  &trans
&trans        &kp CAPS      &kp INS     &kp F1      &kp F2                    &trans  &trans  &to 0   &trans  &trans  &trans                 &kp KP_N0      &kp KP_N0     &kp KP_DOT    &kp KP_ENTER  &trans
            >;
        };

        magic_layer {
            bindings = <
&bt BT_CLR   &none            &none            &none            &none                                                                                     &none  &none  &none  &none  &bt BT_CLR_ALL
&none        &none            &none            &none            &none            &none                                                             &none  &none  &none  &none  &none  &none
&none        &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                                   &none  &none  &none  &none  &none  &none
&bootloader  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                                   &none  &none  &none  &none  &none  &bootloader
&sys_reset   &none            &none            &none            &none            &none            &bt_2  &bt_3  &none         &none  &none  &none  &none  &none  &none  &none  &none  &sys_reset
&none        &none            &none            &none            &none                             &bt_0  &bt_1  &out OUT_USB  &none  &none  &none         &none  &none  &none  &none  &to 0
            >;
        };
    };
};
